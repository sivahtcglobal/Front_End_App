import { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';
import { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { startWith, debounceTime, map } from 'rxjs/operators';
import { __values } from 'tslib';
import { MatButtonModule, MatMenuModule, MatInputModule, MatAutocompleteModule, MatIconModule, MatIconRegistry } from '@angular/material';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { DomSanitizer } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/db.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var COUNTRIES_DB = [
    {
        name: 'Afghanistan',
        alpha2Code: 'AF',
        alpha3Code: 'AFG',
        numericCode: '004'
    },
    {
        name: 'Albania',
        alpha2Code: 'AL',
        alpha3Code: 'ALB',
        numericCode: '008'
    },
    {
        name: 'Algeria',
        alpha2Code: 'DZ',
        alpha3Code: 'DZA',
        numericCode: '012'
    },
    {
        name: 'American Samoa',
        alpha2Code: 'AS',
        alpha3Code: 'ASM',
        numericCode: '016'
    },
    {
        name: 'Andorra',
        alpha2Code: 'AD',
        alpha3Code: 'AND',
        numericCode: '020'
    },
    {
        name: 'Angola',
        alpha2Code: 'AO',
        alpha3Code: 'AGO',
        numericCode: '024'
    },
    {
        name: 'Argentina',
        alpha2Code: 'AR',
        alpha3Code: 'ARG',
        numericCode: '032'
    },
    {
        name: 'Australia',
        alpha2Code: 'AU',
        alpha3Code: 'AUS',
        numericCode: '036'
    },
    {
        name: 'Austria',
        alpha2Code: 'AT',
        alpha3Code: 'AUT',
        numericCode: '040'
    },
    {
        name: 'Azerbaijan',
        alpha2Code: 'AZ',
        alpha3Code: 'AZE',
        numericCode: '031'
    },
    {
        name: 'Bahamas',
        alpha2Code: 'BS',
        alpha3Code: 'BHS',
        numericCode: '044'
    },
    {
        name: 'Bahrain',
        alpha2Code: 'BH',
        alpha3Code: 'BHR',
        numericCode: '048'
    },
    {
        name: 'Bangladesh',
        alpha2Code: 'BD',
        alpha3Code: 'BGD',
        numericCode: '050'
    },
    {
        name: 'Barbados',
        alpha2Code: 'BB',
        alpha3Code: 'BRB',
        numericCode: '052'
    },
    {
        name: 'Belarus',
        alpha2Code: 'BY',
        alpha3Code: 'BLR',
        numericCode: '112'
    },
    {
        name: 'Belgium',
        alpha2Code: 'BE',
        alpha3Code: 'BEL',
        numericCode: '056'
    },
    {
        name: 'Belize',
        alpha2Code: 'BZ',
        alpha3Code: 'BLZ',
        numericCode: '084'
    },
    {
        name: 'Benin',
        alpha2Code: 'BJ',
        alpha3Code: 'BEN',
        numericCode: '204'
    },
    {
        name: 'Bermuda',
        alpha2Code: 'BM',
        alpha3Code: 'BMU',
        numericCode: '060'
    },
    {
        name: 'Bhutan',
        alpha2Code: 'BT',
        alpha3Code: 'BTN',
        numericCode: '064'
    },
    {
        name: 'Bolivia',
        alpha2Code: 'BO',
        alpha3Code: 'BOL',
        numericCode: '068'
    },
    {
        name: 'Bonaire, Sint Eustatius and Saba',
        alpha2Code: 'BQ',
        alpha3Code: 'BES',
        numericCode: '535'
    },
    {
        name: 'Bosnia and Herzegovina',
        alpha2Code: 'BA',
        alpha3Code: 'BIH',
        numericCode: '070'
    },
    {
        name: 'Botswana',
        alpha2Code: 'BW',
        alpha3Code: 'BWA',
        numericCode: '072'
    },
    {
        name: 'Bouvet Island',
        alpha2Code: 'BV',
        alpha3Code: 'BVT',
        numericCode: '074'
    },
    {
        name: 'Brazil',
        alpha2Code: 'BR',
        alpha3Code: 'BRA',
        numericCode: '076'
    },
    {
        name: 'Bulgaria',
        alpha2Code: 'BG',
        alpha3Code: 'BGR',
        numericCode: '100'
    },
    {
        name: 'Cabo Verde',
        alpha2Code: 'CV',
        alpha3Code: 'CPV',
        numericCode: '132'
    },
    {
        name: 'Cambodia',
        alpha2Code: 'KH',
        alpha3Code: 'KHM',
        numericCode: '116'
    },
    {
        name: 'Cameroon',
        alpha2Code: 'CM',
        alpha3Code: 'CMR',
        numericCode: '120'
    },
    {
        name: 'Canada',
        alpha2Code: 'CA',
        alpha3Code: 'CAN',
        numericCode: '124'
    },
    {
        name: 'Central African Republic',
        alpha2Code: 'CF',
        alpha3Code: 'CAF',
        numericCode: '140'
    },
    {
        name: 'Chile',
        alpha2Code: 'CL',
        alpha3Code: 'CHL',
        numericCode: '152'
    },
    {
        name: 'China',
        alpha2Code: 'CN',
        alpha3Code: 'CHN',
        numericCode: '156'
    },
    {
        name: 'Colombia',
        alpha2Code: 'CO',
        alpha3Code: 'COL',
        numericCode: '170'
    },
    {
        name: 'Congo',
        alpha2Code: 'CD',
        alpha3Code: 'COD',
        numericCode: '180'
    },
    {
        name: 'Costa Rica',
        alpha2Code: 'CR',
        alpha3Code: 'CRI',
        numericCode: '188'
    },
    {
        name: 'Croatia',
        alpha2Code: 'HR',
        alpha3Code: 'HRV',
        numericCode: '191'
    },
    {
        name: 'Cuba',
        alpha2Code: 'CU',
        alpha3Code: 'CUB',
        numericCode: '192'
    },
    {
        name: 'Cyprus',
        alpha2Code: 'CY',
        alpha3Code: 'CYP',
        numericCode: '196'
    },
    {
        name: 'Czechia',
        alpha2Code: 'CZ',
        alpha3Code: 'CZE',
        numericCode: '203'
    },
    {
        name: 'CÃ´te d\'Ivoire',
        alpha2Code: 'CI',
        alpha3Code: 'CIV',
        numericCode: '384'
    },
    {
        name: 'Denmark',
        alpha2Code: 'DK',
        alpha3Code: 'DNK',
        numericCode: '208'
    },
    {
        name: 'Dominica',
        alpha2Code: 'DM',
        alpha3Code: 'DMA',
        numericCode: '212'
    },
    {
        name: 'Dominican Republic',
        alpha2Code: 'DO',
        alpha3Code: 'DOM',
        numericCode: '214'
    },
    {
        name: 'Ecuador',
        alpha2Code: 'EC',
        alpha3Code: 'ECU',
        numericCode: '218'
    },
    {
        name: 'Egypt',
        alpha2Code: 'EG',
        alpha3Code: 'EGY',
        numericCode: '818'
    },
    {
        name: 'El Salvador',
        alpha2Code: 'SV',
        alpha3Code: 'SLV',
        numericCode: '222'
    },
    {
        name: 'Equatorial Guinea',
        alpha2Code: 'GQ',
        alpha3Code: 'GNQ',
        numericCode: '226'
    },
    {
        name: 'Estonia',
        alpha2Code: 'EE',
        alpha3Code: 'EST',
        numericCode: '233'
    },
    {
        name: 'Ethiopia',
        alpha2Code: 'ET',
        alpha3Code: 'ETH',
        numericCode: '231'
    },
    {
        name: 'Finland',
        alpha2Code: 'FI',
        alpha3Code: 'FIN',
        numericCode: '246'
    },
    {
        name: 'France',
        alpha2Code: 'FR',
        alpha3Code: 'FRA',
        numericCode: '250'
    },
    {
        name: 'Georgia',
        alpha2Code: 'GE',
        alpha3Code: 'GEO',
        numericCode: '268'
    },
    {
        name: 'Germany',
        alpha2Code: 'DE',
        alpha3Code: 'DEU',
        numericCode: '276'
    },
    {
        name: 'Ghana',
        alpha2Code: 'GH',
        alpha3Code: 'GHA',
        numericCode: '288'
    },
    {
        name: 'Greece',
        alpha2Code: 'GR',
        alpha3Code: 'GRC',
        numericCode: '300'
    },
    {
        name: 'Greenland',
        alpha2Code: 'GL',
        alpha3Code: 'GRL',
        numericCode: '304'
    },
    {
        name: 'Guadeloupe',
        alpha2Code: 'GP',
        alpha3Code: 'GLP',
        numericCode: '312'
    },
    {
        name: 'Guatemala',
        alpha2Code: 'GT',
        alpha3Code: 'GTM',
        numericCode: '320'
    },
    {
        name: 'Guyana',
        alpha2Code: 'GY',
        alpha3Code: 'GUY',
        numericCode: '328'
    },
    {
        name: 'Haiti',
        alpha2Code: 'HT',
        alpha3Code: 'HTI',
        numericCode: '332'
    },
    {
        name: 'Hong Kong',
        alpha2Code: 'HK',
        alpha3Code: 'HKG',
        numericCode: ''
    },
    {
        name: 'Hungary',
        alpha2Code: 'HU',
        alpha3Code: 'HUN',
        numericCode: '348'
    },
    {
        name: 'Iceland',
        alpha2Code: 'IS',
        alpha3Code: 'ISL',
        numericCode: '352'
    },
    {
        name: 'India',
        alpha2Code: 'IN',
        alpha3Code: 'IND',
        numericCode: '356'
    },
    {
        name: 'Indonesia',
        alpha2Code: 'ID',
        alpha3Code: 'IDN',
        numericCode: '360'
    },
    {
        name: 'Iran',
        alpha2Code: 'IR',
        alpha3Code: 'IRN',
        numericCode: '364'
    },
    {
        name: 'Iraq',
        alpha2Code: 'IQ',
        alpha3Code: 'IRQ',
        numericCode: '368'
    },
    {
        name: 'Ireland',
        alpha2Code: 'IE',
        alpha3Code: 'IRL',
        numericCode: '372'
    },
    {
        name: 'Israel',
        alpha2Code: 'IL',
        alpha3Code: 'ISR',
        numericCode: '376'
    },
    {
        name: 'Italy',
        alpha2Code: 'IT',
        alpha3Code: 'ITA',
        numericCode: '380'
    },
    {
        name: 'Jamaica',
        alpha2Code: 'JM',
        alpha3Code: 'JAM',
        numericCode: '388'
    },
    {
        name: 'Japan',
        alpha2Code: 'JP',
        alpha3Code: 'JPN',
        numericCode: '392'
    },
    {
        name: 'Jersey',
        alpha2Code: 'JE',
        alpha3Code: 'JEY',
        numericCode: '832'
    },
    {
        name: 'Jordan',
        alpha2Code: 'JO',
        alpha3Code: 'JOR',
        numericCode: '400'
    },
    {
        name: 'Kazakhstan',
        alpha2Code: 'KZ',
        alpha3Code: 'KAZ',
        numericCode: '398'
    },
    {
        name: 'Kenya',
        alpha2Code: 'KE',
        alpha3Code: 'KEN',
        numericCode: '404'
    },
    {
        name: 'Korea (the Democratic People\'s Republic of)',
        alpha2Code: 'KP',
        alpha3Code: 'PRK',
        numericCode: '408'
    },
    {
        name: 'Korea (the Republic of)\t',
        alpha2Code: 'KR',
        alpha3Code: 'KOR',
        numericCode: '410'
    },
    {
        name: 'Kuwait',
        alpha2Code: 'KW',
        alpha3Code: 'KWT',
        numericCode: '414'
    },
    {
        name: 'Kyrgyzstan',
        alpha2Code: 'KG',
        alpha3Code: 'KGZ',
        numericCode: '417'
    },
    {
        name: 'Latvia',
        alpha2Code: 'LV',
        alpha3Code: 'LVA',
        numericCode: '428'
    },
    {
        name: 'Lebanon',
        alpha2Code: 'LB',
        alpha3Code: 'LBN',
        numericCode: '422'
    },
    {
        name: 'Liberia',
        alpha2Code: 'LR',
        alpha3Code: 'LBR',
        numericCode: '430'
    },
    {
        name: 'Libya',
        alpha2Code: 'LY',
        alpha3Code: 'LBY',
        numericCode: '434'
    },
    {
        name: 'Liechtenstein',
        alpha2Code: 'LI',
        alpha3Code: 'LIE',
        numericCode: '438'
    },
    {
        name: 'Lithuania',
        alpha2Code: 'LT',
        alpha3Code: 'LTU',
        numericCode: '440'
    },
    {
        name: 'Luxembourg',
        alpha2Code: 'LU',
        alpha3Code: 'LUX',
        numericCode: '442'
    },
    {
        name: 'Macao',
        alpha2Code: 'MO',
        alpha3Code: 'MAC',
        numericCode: '446'
    },
    {
        name: 'Madagascar',
        alpha2Code: 'MG',
        alpha3Code: 'MDG',
        numericCode: '450'
    },
    {
        name: 'Malaysia',
        alpha2Code: 'MY',
        alpha3Code: 'MYS',
        numericCode: ''
    },
    {
        name: 'Maldives',
        alpha2Code: 'MV',
        alpha3Code: 'MDV',
        numericCode: '462'
    },
    {
        name: 'Mali',
        alpha2Code: 'ML',
        alpha3Code: 'MLI',
        numericCode: '466'
    },
    {
        name: 'Malta',
        alpha2Code: 'MT',
        alpha3Code: 'MLT',
        numericCode: '470'
    },
    {
        name: 'Mexico',
        alpha2Code: 'MX',
        alpha3Code: 'MEX',
        numericCode: '484'
    },
    {
        name: 'Monaco',
        alpha2Code: 'MC',
        alpha3Code: 'MCO',
        numericCode: '492'
    },
    {
        name: 'Mongolia',
        alpha2Code: 'MN',
        alpha3Code: 'MNG',
        numericCode: '496'
    },
    {
        name: 'Montenegro',
        alpha2Code: 'ME',
        alpha3Code: 'MNE',
        numericCode: '499'
    },
    {
        name: 'Morocco',
        alpha2Code: 'MA',
        alpha3Code: 'MAR',
        numericCode: '504'
    },
    {
        name: 'Namibia',
        alpha2Code: 'NA',
        alpha3Code: 'NAM',
        numericCode: '516'
    },
    {
        name: 'Nepal',
        alpha2Code: 'NP',
        alpha3Code: 'NPL',
        numericCode: '524'
    },
    {
        name: 'Netherlands',
        alpha2Code: 'NL',
        alpha3Code: 'NLD',
        numericCode: '528'
    },
    {
        name: 'New Caledonia',
        alpha2Code: 'NC',
        alpha3Code: 'NCL',
        numericCode: '540'
    },
    {
        name: 'New Zealand',
        alpha2Code: 'NZ',
        alpha3Code: 'NZL',
        numericCode: '554'
    },
    {
        name: 'Nigeria',
        alpha2Code: 'NG',
        alpha3Code: 'NGA',
        numericCode: '556'
    },
    {
        name: 'Norway',
        alpha2Code: 'NO',
        alpha3Code: 'NOR',
        numericCode: '578'
    },
    {
        name: 'Oman',
        alpha2Code: 'OM',
        alpha3Code: 'OMN',
        numericCode: '512'
    },
    {
        name: 'Pakistan',
        alpha2Code: 'PK',
        alpha3Code: 'PAK',
        numericCode: '586'
    },
    {
        name: 'Palestine',
        alpha2Code: 'PS',
        alpha3Code: 'PSE',
        numericCode: '275'
    },
    {
        name: 'Paraguay',
        alpha2Code: 'PY',
        alpha3Code: 'PRY',
        numericCode: '600'
    },
    {
        name: 'Peru',
        alpha2Code: 'PE',
        alpha3Code: 'PER',
        numericCode: '604'
    },
    {
        name: 'Philippines',
        alpha2Code: 'PH',
        alpha3Code: 'PHL',
        numericCode: '608'
    },
    {
        name: 'Poland',
        alpha2Code: 'PL',
        alpha3Code: 'POL',
        numericCode: '616'
    },
    {
        name: 'Portugal',
        alpha2Code: 'PT',
        alpha3Code: 'PRT',
        numericCode: '620'
    },
    {
        name: 'Puerto Rico',
        alpha2Code: 'PR',
        alpha3Code: 'PRI',
        numericCode: '630'
    },
    {
        name: 'Qatar',
        alpha2Code: 'QA',
        alpha3Code: 'QAT',
        numericCode: '634'
    },
    {
        name: 'Republic of North Macedonia',
        alpha2Code: 'MK',
        alpha3Code: 'MKD',
        numericCode: '807'
    },
    {
        name: 'Romania',
        alpha2Code: 'RO',
        alpha3Code: 'ROU',
        numericCode: '642'
    },
    {
        name: 'Russian Federation (the)',
        alpha2Code: 'RU',
        alpha3Code: 'RUS',
        numericCode: '643'
    },
    {
        name: 'San Marino',
        alpha2Code: 'SM',
        alpha3Code: 'SMR',
        numericCode: '674'
    },
    {
        name: 'Saudi Arabia',
        alpha2Code: 'SA',
        alpha3Code: 'SAU',
        numericCode: '682'
    },
    {
        name: 'Senegal',
        alpha2Code: 'SN',
        alpha3Code: 'SEN',
        numericCode: '686'
    },
    {
        name: 'Serbia',
        alpha2Code: 'RS',
        alpha3Code: 'SRB',
        numericCode: '688'
    },
    {
        name: 'Singapore',
        alpha2Code: 'SG',
        alpha3Code: 'SGP',
        numericCode: '702'
    },
    {
        name: 'Slovakia',
        alpha2Code: 'SK',
        alpha3Code: 'SVK',
        numericCode: '703'
    },
    {
        name: 'Slovenia',
        alpha2Code: 'SI',
        alpha3Code: 'SVN',
        numericCode: '705'
    },
    {
        name: 'Somalia',
        alpha2Code: 'SO',
        alpha3Code: 'SOM',
        numericCode: '706'
    },
    {
        name: 'South Africa',
        alpha2Code: 'ZA',
        alpha3Code: 'ZAF',
        numericCode: '710'
    },
    {
        name: 'Spain',
        alpha2Code: 'ES',
        alpha3Code: 'ESP',
        numericCode: '724'
    },
    {
        name: 'Sri Lanka',
        alpha2Code: 'LK',
        alpha3Code: 'LKA',
        numericCode: '144'
    },
    {
        name: 'Sudan',
        alpha2Code: 'SD',
        alpha3Code: 'SDN',
        numericCode: '729'
    },
    {
        name: 'Sweden',
        alpha2Code: 'SE',
        alpha3Code: 'SWE',
        numericCode: '752'
    },
    {
        name: 'Switzerland',
        alpha2Code: 'CH',
        alpha3Code: 'CHE',
        numericCode: '756'
    },
    {
        name: 'Syrian Arab Republic',
        alpha2Code: 'SY',
        alpha3Code: 'SYR',
        numericCode: '760'
    },
    {
        name: 'Taiwan',
        alpha2Code: 'TW',
        alpha3Code: 'TWN',
        numericCode: '158'
    },
    {
        name: 'Thailand',
        alpha2Code: 'TH',
        alpha3Code: 'THA',
        numericCode: '764'
    },
    {
        name: 'Tunisia',
        alpha2Code: 'TN',
        alpha3Code: 'TUN',
        numericCode: '788'
    },
    {
        name: 'Turkey',
        alpha2Code: 'TR',
        alpha3Code: 'TUR',
        numericCode: '792'
    },
    {
        name: 'Ukraine',
        alpha2Code: 'UA',
        alpha3Code: 'UKR',
        numericCode: '804'
    },
    {
        name: 'United Arab Emirates',
        alpha2Code: 'AE',
        alpha3Code: 'ARE',
        numericCode: '784'
    },
    {
        name: 'United Kingdom',
        alpha2Code: 'GB',
        alpha3Code: 'GBR',
        numericCode: '826'
    },
    {
        name: 'United States of America',
        alpha2Code: 'US',
        alpha3Code: 'USA',
        numericCode: '840'
    },
    {
        name: 'Uruguay',
        alpha2Code: 'UY',
        alpha3Code: 'URY',
        numericCode: '858'
    },
    {
        name: 'Venezuela',
        alpha2Code: 'VE',
        alpha3Code: 'VEN',
        numericCode: '862'
    },
    {
        name: 'Vietnam',
        alpha2Code: 'VN',
        alpha3Code: 'VNM',
        numericCode: '704'
    },
    {
        name: 'Yemen',
        alpha2Code: 'YE',
        alpha3Code: 'YEM',
        numericCode: '887'
    },
    {
        name: 'Zimbabwe',
        alpha2Code: 'ZW',
        alpha3Code: 'ZWE',
        numericCode: '716'
    },
];

/**
 * @fileoverview added by tsickle
 * Generated from: lib/mat-select-country.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Country interface ISO 3166
 * @record
 */
function Country() { }
if (false) {
    /** @type {?} */
    Country.prototype.name;
    /** @type {?} */
    Country.prototype.alpha2Code;
    /** @type {?} */
    Country.prototype.alpha3Code;
    /** @type {?} */
    Country.prototype.numericCode;
}
/**
 * @author Anthony Nahas
 * \@since 11.19
 * @version 1.0
 */
var MatSelectCountryComponent = /** @class */ (function () {
    function MatSelectCountryComponent() {
        this.placeHolder = 'Select country';
        this.onCountrySelected = new EventEmitter();
        this.countryFormControl = new FormControl();
        this.countries = COUNTRIES_DB;
    }
    /**
     * @return {?}
     */
    MatSelectCountryComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.filteredOptions = this.countryFormControl.valueChanges
            .pipe(startWith(''), debounceTime(300), map((/**
         * @param {?} value
         * @return {?}
         */
        function (value) { return _this._filter(value); })));
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    MatSelectCountryComponent.prototype._filter = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var filterValue = value.toLowerCase();
        return this.countries.filter((/**
         * @param {?} option
         * @return {?}
         */
        function (option) {
            return option.name.toLowerCase().includes(filterValue)
                || option.alpha2Code.toLowerCase().includes(filterValue)
                || option.alpha3Code.toLowerCase().includes(filterValue);
        }));
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    MatSelectCountryComponent.prototype.onOptionsSelected = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.selectedCountry = this.countries.find((/**
         * @param {?} country
         * @return {?}
         */
        function (country) { return country.name === $event.option.value; }));
        this.onCountrySelected.emit(this.selectedCountry);
    };
    MatSelectCountryComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mat-select-country',
                    template: "<form>\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label *ngIf=\"label\">{{label}}</mat-label>\n    <mat-icon class=\"mr-12 s-20 secondary-text\" matSuffix\n              [svgIcon]=\"selectedCountry?.alpha2Code.toLowerCase()\"></mat-icon>\n    <input type=\"text\" [placeholder]=\"placeHolder\" aria-label=\"country\"\n           matInput [formControl]=\"countryFormControl\"\n           [matAutocomplete]=\"auto\" [readonly]=\"readonly\" [disabled]=\"disabled\">\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onOptionsSelected($event)\">\n      <mat-option *ngFor=\"let country of filteredOptions | async\" [value]=\"country?.name\">\n        <mat-icon [svgIcon]=\"country?.alpha2Code.toLowerCase()\"></mat-icon>\n        <small>{{country?.name}} - {{country?.alpha3Code}}</small>\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>\n",
                    styles: [""]
                }] }
    ];
    MatSelectCountryComponent.propDecorators = {
        appearance: [{ type: Input }],
        label: [{ type: Input }],
        placeHolder: [{ type: Input }],
        disabled: [{ type: Input }],
        readonly: [{ type: Input }],
        onCountrySelected: [{ type: Output }]
    };
    return MatSelectCountryComponent;
}());
if (false) {
    /** @type {?} */
    MatSelectCountryComponent.prototype.appearance;
    /** @type {?} */
    MatSelectCountryComponent.prototype.label;
    /** @type {?} */
    MatSelectCountryComponent.prototype.placeHolder;
    /** @type {?} */
    MatSelectCountryComponent.prototype.disabled;
    /** @type {?} */
    MatSelectCountryComponent.prototype.readonly;
    /** @type {?} */
    MatSelectCountryComponent.prototype.onCountrySelected;
    /** @type {?} */
    MatSelectCountryComponent.prototype.countryFormControl;
    /** @type {?} */
    MatSelectCountryComponent.prototype.selectedCountry;
    /** @type {?} */
    MatSelectCountryComponent.prototype.countries;
    /** @type {?} */
    MatSelectCountryComponent.prototype.filteredOptions;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/mat-select-country.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @author Anthony Nahas
 * \@since 06.11.19
 */
var MatSelectCountryModule = /** @class */ (function () {
    function MatSelectCountryModule(iconRegistry, sanitizer) {
        this.iconRegistry = iconRegistry;
        this.sanitizer = sanitizer;
        this.registerCountries();
    }
    /**
     * @return {?}
     */
    MatSelectCountryModule.prototype.registerCountries = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        try {
            for (var COUNTRIES_DB_1 = __values(COUNTRIES_DB), COUNTRIES_DB_1_1 = COUNTRIES_DB_1.next(); !COUNTRIES_DB_1_1.done; COUNTRIES_DB_1_1 = COUNTRIES_DB_1.next()) {
                var country = COUNTRIES_DB_1_1.value;
                /** @type {?} */
                var countryAlpha2Code = country.alpha2Code.toLowerCase();
                this.iconRegistry
                    .addSvgIcon(countryAlpha2Code, this.sanitizer
                    .bypassSecurityTrustResourceUrl("assets/svg-country-flags/svg/" + countryAlpha2Code + ".svg"));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (COUNTRIES_DB_1_1 && !COUNTRIES_DB_1_1.done && (_a = COUNTRIES_DB_1.return)) _a.call(COUNTRIES_DB_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    MatSelectCountryModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [MatSelectCountryComponent],
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        HttpClientModule,
                        MatButtonModule,
                        MatMenuModule,
                        MatInputModule,
                        MatAutocompleteModule,
                        MatIconModule
                        // FlexLayoutModule
                    ],
                    exports: [MatSelectCountryComponent]
                },] }
    ];
    /** @nocollapse */
    MatSelectCountryModule.ctorParameters = function () { return [
        { type: MatIconRegistry },
        { type: DomSanitizer }
    ]; };
    return MatSelectCountryModule;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    MatSelectCountryModule.prototype.iconRegistry;
    /**
     * @type {?}
     * @private
     */
    MatSelectCountryModule.prototype.sanitizer;
}

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: angular-material-extensions-select-country.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { MatSelectCountryComponent, MatSelectCountryModule };
//# sourceMappingURL=angular-material-extensions-select-country.js.map
