{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@angular-material-extensions/select-country/lib/db.ts","ng://@angular-material-extensions/select-country/lib/mat-select-country.component.ts","ng://@angular-material-extensions/select-country/lib/mat-select-country.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","COUNTRIES_DB","name","alpha2Code","alpha3Code","numericCode","MatSelectCountryComponent","this","placeHolder","onCountrySelected","EventEmitter","countryFormControl","FormControl","countries","prototype","ngOnInit","_this","filteredOptions","valueChanges","pipe","startWith","debounceTime","map","_filter","filterValue","toLowerCase","filter","option","includes","onOptionsSelected","$event","selectedCountry","find","country","emit","Component","args","selector","template","Input","Output","MatSelectCountryModule","iconRegistry","sanitizer","registerCountries","COUNTRIES_DB_1","tslib_1.__values","COUNTRIES_DB_1_1","countryAlpha2Code","addSvgIcon","bypassSecurityTrustResourceUrl","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","MatButtonModule","MatMenuModule","MatInputModule","MatAutocompleteModule","MatIconModule","exports","MatIconRegistry","DomSanitizer"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Country} from './mat-select-country.component';\n\nexport const COUNTRIES_DB: Country[] =\n  [\n    {\n      name: 'Afghanistan',\n      alpha2Code: 'AF',\n      alpha3Code: 'AFG',\n      numericCode: '004'\n    },\n    {\n      name: 'Albania',\n      alpha2Code: 'AL',\n      alpha3Code: 'ALB',\n      numericCode: '008'\n    },\n    {\n      name: 'Algeria',\n      alpha2Code: 'DZ',\n      alpha3Code: 'DZA',\n      numericCode: '012'\n    },\n    {\n      name: 'American Samoa',\n      alpha2Code: 'AS',\n      alpha3Code: 'ASM',\n      numericCode: '016'\n    },\n    {\n      name: 'Andorra',\n      alpha2Code: 'AD',\n      alpha3Code: 'AND',\n      numericCode: '020'\n    },\n    {\n      name: 'Angola',\n      alpha2Code: 'AO',\n      alpha3Code: 'AGO',\n      numericCode: '024'\n    },\n    {\n      name: 'Argentina',\n      alpha2Code: 'AR',\n      alpha3Code: 'ARG',\n      numericCode: '032'\n    },\n    {\n      name: 'Australia',\n      alpha2Code: 'AU',\n      alpha3Code: 'AUS',\n      numericCode: '036'\n    },\n    {\n      name: 'Austria',\n      alpha2Code: 'AT',\n      alpha3Code: 'AUT',\n      numericCode: '040'\n    },\n    {\n      name: 'Azerbaijan',\n      alpha2Code: 'AZ',\n      alpha3Code: 'AZE',\n      numericCode: '031'\n    },\n    {\n      name: 'Bahamas',\n      alpha2Code: 'BS',\n      alpha3Code: 'BHS',\n      numericCode: '044'\n    },\n    {\n      name: 'Bahrain',\n      alpha2Code: 'BH',\n      alpha3Code: 'BHR',\n      numericCode: '048'\n    },\n    {\n      name: 'Bangladesh',\n      alpha2Code: 'BD',\n      alpha3Code: 'BGD',\n      numericCode: '050'\n    },\n    {\n      name: 'Barbados',\n      alpha2Code: 'BB',\n      alpha3Code: 'BRB',\n      numericCode: '052'\n    },\n    {\n      name: 'Belarus',\n      alpha2Code: 'BY',\n      alpha3Code: 'BLR',\n      numericCode: '112'\n    },\n    {\n      name: 'Belgium',\n      alpha2Code: 'BE',\n      alpha3Code: 'BEL',\n      numericCode: '056'\n    },\n    {\n      name: 'Belize',\n      alpha2Code: 'BZ',\n      alpha3Code: 'BLZ',\n      numericCode: '084'\n    },\n    {\n      name: 'Benin',\n      alpha2Code: 'BJ',\n      alpha3Code: 'BEN',\n      numericCode: '204'\n    },\n    {\n      name: 'Bermuda',\n      alpha2Code: 'BM',\n      alpha3Code: 'BMU',\n      numericCode: '060'\n    },\n    {\n      name: 'Bhutan',\n      alpha2Code: 'BT',\n      alpha3Code: 'BTN',\n      numericCode: '064'\n    },\n    {\n      name: 'Bolivia',\n      alpha2Code: 'BO',\n      alpha3Code: 'BOL',\n      numericCode: '068'\n    },\n    {\n      name: 'Bonaire, Sint Eustatius and Saba',\n      alpha2Code: 'BQ',\n      alpha3Code: 'BES',\n      numericCode: '535'\n    },\n    {\n      name: 'Bosnia and Herzegovina',\n      alpha2Code: 'BA',\n      alpha3Code: 'BIH',\n      numericCode: '070'\n    },\n    {\n      name: 'Botswana',\n      alpha2Code: 'BW',\n      alpha3Code: 'BWA',\n      numericCode: '072'\n    },\n    {\n      name: 'Bouvet Island',\n      alpha2Code: 'BV',\n      alpha3Code: 'BVT',\n      numericCode: '074'\n    },\n    {\n      name: 'Brazil',\n      alpha2Code: 'BR',\n      alpha3Code: 'BRA',\n      numericCode: '076'\n    },\n    {\n      name: 'Bulgaria',\n      alpha2Code: 'BG',\n      alpha3Code: 'BGR',\n      numericCode: '100'\n    },\n    {\n      name: 'Cabo Verde',\n      alpha2Code: 'CV',\n      alpha3Code: 'CPV',\n      numericCode: '132'\n    },\n    {\n      name: 'Cambodia',\n      alpha2Code: 'KH',\n      alpha3Code: 'KHM',\n      numericCode: '116'\n    },\n    {\n      name: 'Cameroon',\n      alpha2Code: 'CM',\n      alpha3Code: 'CMR',\n      numericCode: '120'\n    },\n    {\n      name: 'Canada',\n      alpha2Code: 'CA',\n      alpha3Code: 'CAN',\n      numericCode: '124'\n    },\n    {\n      name: 'Central African Republic',\n      alpha2Code: 'CF',\n      alpha3Code: 'CAF',\n      numericCode: '140'\n    },\n    {\n      name: 'Chile',\n      alpha2Code: 'CL',\n      alpha3Code: 'CHL',\n      numericCode: '152'\n    },\n    {\n      name: 'China',\n      alpha2Code: 'CN',\n      alpha3Code: 'CHN',\n      numericCode: '156'\n    },\n    {\n      name: 'Colombia',\n      alpha2Code: 'CO',\n      alpha3Code: 'COL',\n      numericCode: '170'\n    },\n    {\n      name: 'Congo',\n      alpha2Code: 'CD',\n      alpha3Code: 'COD',\n      numericCode: '180'\n    },\n    {\n      name: 'Costa Rica',\n      alpha2Code: 'CR',\n      alpha3Code: 'CRI',\n      numericCode: '188'\n    },\n    {\n      name: 'Croatia',\n      alpha2Code: 'HR',\n      alpha3Code: 'HRV',\n      numericCode: '191'\n    },\n    {\n      name: 'Cuba',\n      alpha2Code: 'CU',\n      alpha3Code: 'CUB',\n      numericCode: '192'\n    },\n    {\n      name: 'Cyprus',\n      alpha2Code: 'CY',\n      alpha3Code: 'CYP',\n      numericCode: '196'\n    },\n    {\n      name: 'Czechia',\n      alpha2Code: 'CZ',\n      alpha3Code: 'CZE',\n      numericCode: '203'\n    },\n    {\n      name: 'CÃ´te d\\'Ivoire',\n      alpha2Code: 'CI',\n      alpha3Code: 'CIV',\n      numericCode: '384'\n    },\n    {\n      name: 'Denmark',\n      alpha2Code: 'DK',\n      alpha3Code: 'DNK',\n      numericCode: '208'\n    },\n    {\n      name: 'Dominica',\n      alpha2Code: 'DM',\n      alpha3Code: 'DMA',\n      numericCode: '212'\n    },\n    {\n      name: 'Dominican Republic',\n      alpha2Code: 'DO',\n      alpha3Code: 'DOM',\n      numericCode: '214'\n    },\n    {\n      name: 'Ecuador',\n      alpha2Code: 'EC',\n      alpha3Code: 'ECU',\n      numericCode: '218'\n    },\n    {\n      name: 'Egypt',\n      alpha2Code: 'EG',\n      alpha3Code: 'EGY',\n      numericCode: '818'\n    },\n    {\n      name: 'El Salvador',\n      alpha2Code: 'SV',\n      alpha3Code: 'SLV',\n      numericCode: '222'\n    },\n    {\n      name: 'Equatorial Guinea',\n      alpha2Code: 'GQ',\n      alpha3Code: 'GNQ',\n      numericCode: '226'\n    },\n    {\n      name: 'Estonia',\n      alpha2Code: 'EE',\n      alpha3Code: 'EST',\n      numericCode: '233'\n    },\n    {\n      name: 'Ethiopia',\n      alpha2Code: 'ET',\n      alpha3Code: 'ETH',\n      numericCode: '231'\n    },\n    {\n      name: 'Finland',\n      alpha2Code: 'FI',\n      alpha3Code: 'FIN',\n      numericCode: '246'\n    },\n    {\n      name: 'France',\n      alpha2Code: 'FR',\n      alpha3Code: 'FRA',\n      numericCode: '250'\n    },\n    {\n      name: 'Georgia',\n      alpha2Code: 'GE',\n      alpha3Code: 'GEO',\n      numericCode: '268'\n    },\n    {\n      name: 'Germany',\n      alpha2Code: 'DE',\n      alpha3Code: 'DEU',\n      numericCode: '276'\n    },\n    {\n      name: 'Ghana',\n      alpha2Code: 'GH',\n      alpha3Code: 'GHA',\n      numericCode: '288'\n    },\n    {\n      name: 'Greece',\n      alpha2Code: 'GR',\n      alpha3Code: 'GRC',\n      numericCode: '300'\n    },\n    {\n      name: 'Greenland',\n      alpha2Code: 'GL',\n      alpha3Code: 'GRL',\n      numericCode: '304'\n    },\n    {\n      name: 'Guadeloupe',\n      alpha2Code: 'GP',\n      alpha3Code: 'GLP',\n      numericCode: '312'\n    },\n    {\n      name: 'Guatemala',\n      alpha2Code: 'GT',\n      alpha3Code: 'GTM',\n      numericCode: '320'\n    },\n    {\n      name: 'Guyana',\n      alpha2Code: 'GY',\n      alpha3Code: 'GUY',\n      numericCode: '328'\n    },\n    {\n      name: 'Haiti',\n      alpha2Code: 'HT',\n      alpha3Code: 'HTI',\n      numericCode: '332'\n    },\n    {\n      name: 'Hong Kong',\n      alpha2Code: 'HK',\n      alpha3Code: 'HKG',\n      numericCode: ''\n    },\n    {\n      name: 'Hungary',\n      alpha2Code: 'HU',\n      alpha3Code: 'HUN',\n      numericCode: '348'\n    },\n    {\n      name: 'Iceland',\n      alpha2Code: 'IS',\n      alpha3Code: 'ISL',\n      numericCode: '352'\n    },\n    {\n      name: 'India',\n      alpha2Code: 'IN',\n      alpha3Code: 'IND',\n      numericCode: '356'\n    },\n    {\n      name: 'Indonesia',\n      alpha2Code: 'ID',\n      alpha3Code: 'IDN',\n      numericCode: '360'\n    },\n    {\n      name: 'Iran',\n      alpha2Code: 'IR',\n      alpha3Code: 'IRN',\n      numericCode: '364'\n    },\n    {\n      name: 'Iraq',\n      alpha2Code: 'IQ',\n      alpha3Code: 'IRQ',\n      numericCode: '368'\n    },\n    {\n      name: 'Ireland',\n      alpha2Code: 'IE',\n      alpha3Code: 'IRL',\n      numericCode: '372'\n    },\n    {\n      name: 'Israel',\n      alpha2Code: 'IL',\n      alpha3Code: 'ISR',\n      numericCode: '376'\n    },\n    {\n      name: 'Italy',\n      alpha2Code: 'IT',\n      alpha3Code: 'ITA',\n      numericCode: '380'\n    },\n    {\n      name: 'Jamaica',\n      alpha2Code: 'JM',\n      alpha3Code: 'JAM',\n      numericCode: '388'\n    },\n    {\n      name: 'Japan',\n      alpha2Code: 'JP',\n      alpha3Code: 'JPN',\n      numericCode: '392'\n    },\n    {\n      name: 'Jersey',\n      alpha2Code: 'JE',\n      alpha3Code: 'JEY',\n      numericCode: '832'\n    },\n    {\n      name: 'Jordan',\n      alpha2Code: 'JO',\n      alpha3Code: 'JOR',\n      numericCode: '400'\n    },\n    {\n      name: 'Kazakhstan',\n      alpha2Code: 'KZ',\n      alpha3Code: 'KAZ',\n      numericCode: '398'\n    },\n    {\n      name: 'Kenya',\n      alpha2Code: 'KE',\n      alpha3Code: 'KEN',\n      numericCode: '404'\n    },\n    {\n      name: 'Korea (the Democratic People\\'s Republic of)',\n      alpha2Code: 'KP',\n      alpha3Code: 'PRK',\n      numericCode: '408'\n    },\n    {\n      name: 'Korea (the Republic of)\\t',\n      alpha2Code: 'KR',\n      alpha3Code: 'KOR',\n      numericCode: '410'\n    },\n    {\n      name: 'Kuwait',\n      alpha2Code: 'KW',\n      alpha3Code: 'KWT',\n      numericCode: '414'\n    },\n    {\n      name: 'Kyrgyzstan',\n      alpha2Code: 'KG',\n      alpha3Code: 'KGZ',\n      numericCode: '417'\n    },\n    {\n      name: 'Latvia',\n      alpha2Code: 'LV',\n      alpha3Code: 'LVA',\n      numericCode: '428'\n    },\n    {\n      name: 'Lebanon',\n      alpha2Code: 'LB',\n      alpha3Code: 'LBN',\n      numericCode: '422'\n    },\n    {\n      name: 'Liberia',\n      alpha2Code: 'LR',\n      alpha3Code: 'LBR',\n      numericCode: '430'\n    },\n    {\n      name: 'Libya',\n      alpha2Code: 'LY',\n      alpha3Code: 'LBY',\n      numericCode: '434'\n    },\n    {\n      name: 'Liechtenstein',\n      alpha2Code: 'LI',\n      alpha3Code: 'LIE',\n      numericCode: '438'\n    },\n    {\n      name: 'Lithuania',\n      alpha2Code: 'LT',\n      alpha3Code: 'LTU',\n      numericCode: '440'\n    },\n    {\n      name: 'Luxembourg',\n      alpha2Code: 'LU',\n      alpha3Code: 'LUX',\n      numericCode: '442'\n    },\n    {\n      name: 'Macao',\n      alpha2Code: 'MO',\n      alpha3Code: 'MAC',\n      numericCode: '446'\n    },\n    {\n      name: 'Madagascar',\n      alpha2Code: 'MG',\n      alpha3Code: 'MDG',\n      numericCode: '450'\n    },\n    {\n      name: 'Malaysia',\n      alpha2Code: 'MY',\n      alpha3Code: 'MYS',\n      numericCode: ''\n    },\n    {\n      name: 'Maldives',\n      alpha2Code: 'MV',\n      alpha3Code: 'MDV',\n      numericCode: '462'\n    },\n    {\n      name: 'Mali',\n      alpha2Code: 'ML',\n      alpha3Code: 'MLI',\n      numericCode: '466'\n    },\n    {\n      name: 'Malta',\n      alpha2Code: 'MT',\n      alpha3Code: 'MLT',\n      numericCode: '470'\n    },\n    {\n      name: 'Mexico',\n      alpha2Code: 'MX',\n      alpha3Code: 'MEX',\n      numericCode: '484'\n    },\n    {\n      name: 'Monaco',\n      alpha2Code: 'MC',\n      alpha3Code: 'MCO',\n      numericCode: '492'\n    },\n    {\n      name: 'Mongolia',\n      alpha2Code: 'MN',\n      alpha3Code: 'MNG',\n      numericCode: '496'\n    },\n    {\n      name: 'Montenegro',\n      alpha2Code: 'ME',\n      alpha3Code: 'MNE',\n      numericCode: '499'\n    },\n    {\n      name: 'Morocco',\n      alpha2Code: 'MA',\n      alpha3Code: 'MAR',\n      numericCode: '504'\n    },\n    {\n      name: 'Namibia',\n      alpha2Code: 'NA',\n      alpha3Code: 'NAM',\n      numericCode: '516'\n    },\n    {\n      name: 'Nepal',\n      alpha2Code: 'NP',\n      alpha3Code: 'NPL',\n      numericCode: '524'\n    },\n    {\n      name: 'Netherlands',\n      alpha2Code: 'NL',\n      alpha3Code: 'NLD',\n      numericCode: '528'\n    },\n    {\n      name: 'New Caledonia',\n      alpha2Code: 'NC',\n      alpha3Code: 'NCL',\n      numericCode: '540'\n    },\n    {\n      name: 'New Zealand',\n      alpha2Code: 'NZ',\n      alpha3Code: 'NZL',\n      numericCode: '554'\n    },\n    {\n      name: 'Nigeria',\n      alpha2Code: 'NG',\n      alpha3Code: 'NGA',\n      numericCode: '556'\n    },\n    {\n      name: 'Norway',\n      alpha2Code: 'NO',\n      alpha3Code: 'NOR',\n      numericCode: '578'\n    },\n    {\n      name: 'Oman',\n      alpha2Code: 'OM',\n      alpha3Code: 'OMN',\n      numericCode: '512'\n    },\n    {\n      name: 'Pakistan',\n      alpha2Code: 'PK',\n      alpha3Code: 'PAK',\n      numericCode: '586'\n    },\n    {\n      name: 'Palestine',\n      alpha2Code: 'PS',\n      alpha3Code: 'PSE',\n      numericCode: '275'\n    },\n    {\n      name: 'Paraguay',\n      alpha2Code: 'PY',\n      alpha3Code: 'PRY',\n      numericCode: '600'\n    },\n    {\n      name: 'Peru',\n      alpha2Code: 'PE',\n      alpha3Code: 'PER',\n      numericCode: '604'\n    },\n    {\n      name: 'Philippines',\n      alpha2Code: 'PH',\n      alpha3Code: 'PHL',\n      numericCode: '608'\n    },\n    {\n      name: 'Poland',\n      alpha2Code: 'PL',\n      alpha3Code: 'POL',\n      numericCode: '616'\n    },\n    {\n      name: 'Portugal',\n      alpha2Code: 'PT',\n      alpha3Code: 'PRT',\n      numericCode: '620'\n    },\n    {\n      name: 'Puerto Rico',\n      alpha2Code: 'PR',\n      alpha3Code: 'PRI',\n      numericCode: '630'\n    },\n    {\n      name: 'Qatar',\n      alpha2Code: 'QA',\n      alpha3Code: 'QAT',\n      numericCode: '634'\n    },\n    {\n      name: 'Republic of North Macedonia',\n      alpha2Code: 'MK',\n      alpha3Code: 'MKD',\n      numericCode: '807'\n    },\n    {\n      name: 'Romania',\n      alpha2Code: 'RO',\n      alpha3Code: 'ROU',\n      numericCode: '642'\n    },\n    {\n      name: 'Russian Federation (the)',\n      alpha2Code: 'RU',\n      alpha3Code: 'RUS',\n      numericCode: '643'\n    },\n    {\n      name: 'San Marino',\n      alpha2Code: 'SM',\n      alpha3Code: 'SMR',\n      numericCode: '674'\n    },\n    {\n      name: 'Saudi Arabia',\n      alpha2Code: 'SA',\n      alpha3Code: 'SAU',\n      numericCode: '682'\n    },\n    {\n      name: 'Senegal',\n      alpha2Code: 'SN',\n      alpha3Code: 'SEN',\n      numericCode: '686'\n    },\n    {\n      name: 'Serbia',\n      alpha2Code: 'RS',\n      alpha3Code: 'SRB',\n      numericCode: '688'\n    },\n    {\n      name: 'Singapore',\n      alpha2Code: 'SG',\n      alpha3Code: 'SGP',\n      numericCode: '702'\n    },\n    {\n      name: 'Slovakia',\n      alpha2Code: 'SK',\n      alpha3Code: 'SVK',\n      numericCode: '703'\n    },\n    {\n      name: 'Slovenia',\n      alpha2Code: 'SI',\n      alpha3Code: 'SVN',\n      numericCode: '705'\n    },\n    {\n      name: 'Somalia',\n      alpha2Code: 'SO',\n      alpha3Code: 'SOM',\n      numericCode: '706'\n    },\n    {\n      name: 'South Africa',\n      alpha2Code: 'ZA',\n      alpha3Code: 'ZAF',\n      numericCode: '710'\n    },\n    {\n      name: 'Spain',\n      alpha2Code: 'ES',\n      alpha3Code: 'ESP',\n      numericCode: '724'\n    },\n    {\n      name: 'Sri Lanka',\n      alpha2Code: 'LK',\n      alpha3Code: 'LKA',\n      numericCode: '144'\n    },\n    {\n      name: 'Sudan',\n      alpha2Code: 'SD',\n      alpha3Code: 'SDN',\n      numericCode: '729'\n    },\n    {\n      name: 'Sweden',\n      alpha2Code: 'SE',\n      alpha3Code: 'SWE',\n      numericCode: '752'\n    },\n    {\n      name: 'Switzerland',\n      alpha2Code: 'CH',\n      alpha3Code: 'CHE',\n      numericCode: '756'\n    },\n    {\n      name: 'Syrian Arab Republic',\n      alpha2Code: 'SY',\n      alpha3Code: 'SYR',\n      numericCode: '760'\n    },\n    {\n      name: 'Taiwan',\n      alpha2Code: 'TW',\n      alpha3Code: 'TWN',\n      numericCode: '158'\n    },\n    {\n      name: 'Thailand',\n      alpha2Code: 'TH',\n      alpha3Code: 'THA',\n      numericCode: '764'\n    },\n    {\n      name: 'Tunisia',\n      alpha2Code: 'TN',\n      alpha3Code: 'TUN',\n      numericCode: '788'\n    },\n    {\n      name: 'Turkey',\n      alpha2Code: 'TR',\n      alpha3Code: 'TUR',\n      numericCode: '792'\n    },\n    {\n      name: 'Ukraine',\n      alpha2Code: 'UA',\n      alpha3Code: 'UKR',\n      numericCode: '804'\n    },\n    {\n      name: 'United Arab Emirates',\n      alpha2Code: 'AE',\n      alpha3Code: 'ARE',\n      numericCode: '784'\n    },\n    {\n      name: 'United Kingdom',\n      alpha2Code: 'GB',\n      alpha3Code: 'GBR',\n      numericCode: '826'\n    },\n    {\n      name: 'United States of America',\n      alpha2Code: 'US',\n      alpha3Code: 'USA',\n      numericCode: '840'\n    },\n    {\n      name: 'Uruguay',\n      alpha2Code: 'UY',\n      alpha3Code: 'URY',\n      numericCode: '858'\n    },\n    {\n      name: 'Venezuela',\n      alpha2Code: 'VE',\n      alpha3Code: 'VEN',\n      numericCode: '862'\n    },\n    {\n      name: 'Vietnam',\n      alpha2Code: 'VN',\n      alpha3Code: 'VNM',\n      numericCode: '704'\n    },\n    {\n      name: 'Yemen',\n      alpha2Code: 'YE',\n      alpha3Code: 'YEM',\n      numericCode: '887'\n    },\n    {\n      name: 'Zimbabwe',\n      alpha2Code: 'ZW',\n      alpha3Code: 'ZWE',\n      numericCode: '716'\n    },\n  ];\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {COUNTRIES_DB} from './db';\nimport {Observable} from 'rxjs';\nimport {debounceTime, map, startWith} from 'rxjs/operators';\nimport {MatAutocompleteSelectedEvent, MatFormFieldAppearance} from '@angular/material';\n\n/**\n * Country interface ISO 3166\n */\nexport interface Country {\n  name: string;\n  alpha2Code: string;\n  alpha3Code: string;\n  numericCode: string;\n}\n\n/**\n * @author Anthony Nahas\n * @since 11.19\n * @version 1.0\n */\n@Component({\n  selector: 'mat-select-country',\n  templateUrl: 'mat-select-country.component.html',\n  styleUrls: ['mat-select-country.component.scss']\n})\nexport class MatSelectCountryComponent implements OnInit {\n\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() label: string;\n  @Input() placeHolder = 'Select country';\n  @Input() disabled: boolean;\n  @Input() readonly: boolean;\n\n  @Output() onCountrySelected: EventEmitter<Country> = new EventEmitter<Country>();\n\n  countryFormControl = new FormControl();\n  selectedCountry: Country;\n  countries: Country[] = COUNTRIES_DB;\n  filteredOptions: Observable<Country[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.countryFormControl.valueChanges\n      .pipe(\n        startWith(''),\n        debounceTime(300),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): Country[] {\n    const filterValue = value.toLowerCase();\n\n    return this.countries.filter((option: Country) =>\n      option.name.toLowerCase().includes(filterValue)\n      || option.alpha2Code.toLowerCase().includes(filterValue)\n      || option.alpha3Code.toLowerCase().includes(filterValue)\n    );\n  }\n\n\n  onOptionsSelected($event: MatAutocompleteSelectedEvent) {\n    this.selectedCountry = this.countries.find(country => country.name === $event.option.value);\n    this.onCountrySelected.emit(this.selectedCountry);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {MatSelectCountryComponent} from './mat-select-country.component';\nimport {MatAutocompleteModule, MatButtonModule, MatIconModule, MatIconRegistry, MatInputModule, MatMenuModule} from '@angular/material';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {COUNTRIES_DB} from './db';\n\n\n/**\n * @author Anthony Nahas\n * @since 06.11.19\n */\n@NgModule({\n  declarations: [MatSelectCountryComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatIconModule\n    // FlexLayoutModule\n  ],\n  exports: [MatSelectCountryComponent]\n})\nexport class MatSelectCountryModule {\n\n  constructor(private iconRegistry: MatIconRegistry, private sanitizer: DomSanitizer) {\n    this.registerCountries();\n  }\n\n  registerCountries() {\n    for (const country of COUNTRIES_DB) {\n      const countryAlpha2Code = country.alpha2Code.toLowerCase();\n      this.iconRegistry\n        .addSvgIcon(countryAlpha2Code, this.sanitizer\n          .bypassSecurityTrustResourceUrl(`assets/svg-country-flags/svg/${countryAlpha2Code}.svg`));\n    }\n  }\n\n}\n"]}